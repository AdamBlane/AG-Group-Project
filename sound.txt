#include "include\OpenAl\include\al.h"
#include "include\OpenAl\include\alc.h"
#include "include\OpenAl\include\alut.h"
ALCdevice *device;
ALuint sources;

void sound_generation(ALCdevice *device)
{
	device = alcOpenDevice(NULL);
	ALCcontext *context;
	ALuint buffer;
	//To render an auidio scene need to create context
    context = alcCreateContext(device, NULL);

	////then define and configure a listener
	ALfloat listenererOri[] = { .0f, .0f, 1.0f, .0f, 1.0f, .0f };
	alListener3f(AL_POSITION, 0, 0, 5.0f);
	alListener3f(AL_VELOCITY, 0, 0, 0);
	alListenerfv(AL_ORIENTATION, listenererOri);
	ALuint source;
	////then generate the source
	alGenSources((ALuint)1, &source);
	alSourcef(source, AL_GAIN, 1);
	////pos of the sound
	alSource3f(source, AL_POSITION, 0, 0, 0);
	////speed of the sound
	alSource3f(source, AL_VELOCITY, 0, 0, 0);
	alSourcei(source, AL_LOOPING, AL_FALSE);

	////now for the buffer
	alGenBuffers((ALuint)1, &buffer);

	sources = source;
	ALsizei size, freq;
	ALenum format;
	ALvoid *data;
	ALboolean loop = AL_FALSE;

	alutLoadWAVFile("..\\NuttyPutters\\include\\OpenAl\\samples\\media\\wave3.wav", &format, &data, &size, &freq, &loop);
	alBufferData(buffer, format, data, size, freq);
	//bind source to buffer
	alSourcei(sources, AL_BUFFER, buffer);
	alSourcePlay(source);
	
	////clean up sound
	//alDeleteSources(1, &source);
	//alDeleteBuffers(1, &buffer);
	device = alcGetContextsDevice(context);
	//alcMakeContextCurrent(NULL);
	//alcDestroyContext(context);
	//alcCloseDevice(device);
}
